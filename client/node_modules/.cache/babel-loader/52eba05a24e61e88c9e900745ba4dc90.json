{"ast":null,"code":"var _jsxFileName = \"N:\\\\3rd Year (1st semester)\\\\SE 3309A\\\\Group Assignments\\\\Assignment 04\\\\3309-Assignment-4\\\\client\\\\src\\\\components\\\\ManageCategories.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { UserAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ManageCategories = () => {\n  _s();\n\n  const {\n    user\n  } = UserAuth();\n  const [categories, setCategories] = useState([]);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  const [editCategoryId, setEditCategoryId] = useState(null);\n  const [editCategoryName, setEditCategoryName] = useState('');\n\n  const fetchCategories = async () => {\n    if (!user) return;\n    const res = await fetch(`/api/categories/user/${user.uid}`);\n    const data = await res.json();\n    setCategories(data);\n  };\n\n  useEffect(() => {\n    fetchCategories();\n  }, [user]);\n\n  const handleAddCategory = async e => {\n    e.preventDefault();\n    if (!user || !newCategoryName.trim()) return;\n    const res = await fetch('/api/categories/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.uid,\n        name: newCategoryName\n      })\n    });\n    const data = await res.json();\n\n    if (data.success) {\n      setNewCategoryName('');\n      fetchCategories();\n    } else {\n      alert('Error adding category.');\n    }\n  };\n\n  const handleEditCategory = async categoryId => {\n    setEditCategoryId(categoryId);\n    const category = categories.find(c => c.id === categoryId);\n    if (category) setEditCategoryName(category.name);\n  };\n\n  const handleSaveEdit = async () => {\n    if (!editCategoryName.trim()) return;\n    const res = await fetch('/api/categories/edit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.uid,\n        categoryId: editCategoryId,\n        name: editCategoryName\n      })\n    });\n    const data = await res.json();\n\n    if (data.success) {\n      setEditCategoryId(null);\n      setEditCategoryName('');\n      fetchCategories();\n    } else {\n      alert('Error editing category.');\n    }\n  };\n\n  const handleDeleteCategory = async categoryId => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this category?');\n    if (!confirmDelete) return;\n    const res = await fetch('/api/categories/delete', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.uid,\n        categoryId\n      })\n    });\n    const data = await res.json();\n\n    if (data.success) {\n      fetchCategories();\n    } else {\n      alert('Error deleting category.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddCategory,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New Category Name\",\n        value: newCategoryName,\n        onChange: e => setNewCategoryName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Categories:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: editCategoryId === cat.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editCategoryName,\n            onChange: e => setEditCategoryName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveEdit,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditCategoryId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [cat.name, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditCategory(cat.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteCategory(cat.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, cat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ManageCategories, \"f52vnJSAqOqpFBrPNdmprOxRWGY=\");\n\n_c = ManageCategories;\nexport default ManageCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageCategories\");","map":{"version":3,"sources":["N:/3rd Year (1st semester)/SE 3309A/Group Assignments/Assignment 04/3309-Assignment-4/client/src/components/ManageCategories.jsx"],"names":["React","useState","useEffect","UserAuth","ManageCategories","user","categories","setCategories","newCategoryName","setNewCategoryName","editCategoryId","setEditCategoryId","editCategoryName","setEditCategoryName","fetchCategories","res","fetch","uid","data","json","handleAddCategory","e","preventDefault","trim","method","headers","body","JSON","stringify","userId","name","success","alert","handleEditCategory","categoryId","category","find","c","id","handleSaveEdit","handleDeleteCategory","confirmDelete","window","confirm","target","value","map","cat"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { UserAuth } from '../context/AuthContext';\n\nconst ManageCategories = () => {\n  const { user } = UserAuth();\n  const [categories, setCategories] = useState([]);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  const [editCategoryId, setEditCategoryId] = useState(null);\n  const [editCategoryName, setEditCategoryName] = useState('');\n\n  const fetchCategories = async () => {\n    if (!user) return;\n    const res = await fetch(`/api/categories/user/${user.uid}`);\n    const data = await res.json();\n    setCategories(data);\n  };\n\n  useEffect(() => {\n    fetchCategories();\n  }, [user]);\n\n  const handleAddCategory = async (e) => {\n    e.preventDefault();\n    if (!user || !newCategoryName.trim()) return;\n    const res = await fetch('/api/categories/add', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userId: user.uid, name: newCategoryName }),\n    });\n    const data = await res.json();\n    if (data.success) {\n      setNewCategoryName('');\n      fetchCategories();\n    } else {\n      alert('Error adding category.');\n    }\n  };\n\n  const handleEditCategory = async (categoryId) => {\n    setEditCategoryId(categoryId);\n    const category = categories.find((c) => c.id === categoryId);\n    if (category) setEditCategoryName(category.name);\n  };\n\n  const handleSaveEdit = async () => {\n    if (!editCategoryName.trim()) return;\n    const res = await fetch('/api/categories/edit', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ \n        userId: user.uid, \n        categoryId: editCategoryId, \n        name: editCategoryName \n      }),\n    });\n    const data = await res.json();\n    if (data.success) {\n      setEditCategoryId(null);\n      setEditCategoryName('');\n      fetchCategories();\n    } else {\n      alert('Error editing category.');\n    }\n  };\n\n  const handleDeleteCategory = async (categoryId) => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this category?');\n    if (!confirmDelete) return;\n\n    const res = await fetch('/api/categories/delete', {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userId: user.uid, categoryId }),\n    });\n    const data = await res.json();\n    if (data.success) {\n      fetchCategories();\n    } else {\n      alert('Error deleting category.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Manage Categories</h2>\n      <form onSubmit={handleAddCategory}>\n        <input\n          type=\"text\"\n          placeholder=\"New Category Name\"\n          value={newCategoryName}\n          onChange={(e) => setNewCategoryName(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Add Category</button>\n      </form>\n\n      <h3>Your Categories:</h3>\n      <ul>\n        {categories.map((cat) => (\n          <li key={cat.id}>\n            {editCategoryId === cat.id ? (\n              <>\n                <input\n                  type=\"text\"\n                  value={editCategoryName}\n                  onChange={(e) => setEditCategoryName(e.target.value)}\n                />\n                <button onClick={handleSaveEdit}>Save</button>\n                <button onClick={() => setEditCategoryId(null)}>Cancel</button>\n              </>\n            ) : (\n              <>\n                {cat.name}{' '}\n                <button onClick={() => handleEditCategory(cat.id)}>Edit</button>{' '}\n                <button onClick={() => handleDeleteCategory(cat.id)}>Delete</button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ManageCategories;\n\n\n"]},"metadata":{},"sourceType":"module"}