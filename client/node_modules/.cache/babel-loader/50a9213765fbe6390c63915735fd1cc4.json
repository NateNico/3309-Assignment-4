{"ast":null,"code":"var _jsxFileName = \"N:\\\\3rd Year (1st semester)\\\\SE 3309A\\\\Group Assignments\\\\Assignment 04\\\\3309-Assignment-4\\\\client\\\\src\\\\components\\\\ExpenseReport.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { UserAuth } from '../context/AuthContext';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseReport = () => {\n  _s();\n\n  const {\n    user\n  } = UserAuth();\n  const [reportData, setReportData] = useState(null);\n  const [loading, setLoading] = useState(false); // Fetch the expense report data when the user is logged in\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      if (!user) return;\n      setLoading(true); // Start loading state\n\n      try {\n        const res = await fetch(`/api/categories/user/${user.uid}`);\n        if (!res.ok) throw new Error('Failed to fetch categories');\n        const data = await res.json();\n        setCategories(data);\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false); // Stop loading state\n      }\n    };\n\n    fetchCategories();\n  }, [user]); // Ensure the effect depends on the `user`\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-3/4 p-6\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-bold\",\n        children: \"Manage Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this) // Loading state\n      : categories.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No categories available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddCategory,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New category name\",\n          value: newCategoryName,\n          onChange: e => setNewCategoryName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ExpenseReport, \"yV+SlhVjt5lHo+zLN6IsM3X/NY0=\");\n\n_c = ExpenseReport;\nexport default ExpenseReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseReport\");","map":{"version":3,"sources":["N:/3rd Year (1st semester)/SE 3309A/Group Assignments/Assignment 04/3309-Assignment-4/client/src/components/ExpenseReport.jsx"],"names":["React","useState","useEffect","UserAuth","Sidebar","Header","ExpenseReport","user","reportData","setReportData","loading","setLoading","fetchCategories","res","fetch","uid","ok","Error","data","json","setCategories","err","console","error","categories","length","map","category","name","id","handleAddCategory","newCategoryName","e","setNewCategoryName","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,QAAQ,EAAzB;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC,CAH0B,CAK1B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,eAAe,GAAG,YAAY;AAClC,UAAI,CAACL,IAAL,EAAW;AACXI,MAAAA,UAAU,CAAC,IAAD,CAAV,CAFkC,CAEhB;;AAElB,UAAI;AACF,cAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,wBAAuBP,IAAI,CAACQ,GAAI,EAAlC,CAAvB;AACA,YAAI,CAACF,GAAG,CAACG,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACb,cAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;AACAC,QAAAA,aAAa,CAACF,IAAD,CAAb;AACD,OALD,CAKE,OAAOG,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,OAPD,SAOU;AACRV,QAAAA,UAAU,CAAC,KAAD,CAAV,CADQ,CACW;AACpB;AACF,KAdD;;AAgBAC,IAAAA,eAAe;AAChB,GAlBQ,EAkBN,CAACL,IAAD,CAlBM,CAAT,CAN0B,CAwBd;;AAEd,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,oBAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAIGG,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,CACY;AADZ,QAEJc,UAAU,CAACC,MAAX,gBACF;AAAA,kBACGD,UAAU,CAACE,GAAX,CAAgBC,QAAD,iBACd;AAAA,oBAAuBA,QAAQ,CAACC;AAAhC,WAASD,QAAQ,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADE,gBAOF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eAiBE;AAAM,QAAA,QAAQ,EAAEC,iBAAhB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,mBAFd;AAGE,UAAA,KAAK,EAAEC,eAHT;AAIE,UAAA,QAAQ,EAAGC,CAAD,IAAOC,kBAAkB,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAJrC;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCC,CA5DD;;GAAM7B,a;;KAAAA,a;AA8DN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { UserAuth } from '../context/AuthContext';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\n\nconst ExpenseReport = () => {\n  const { user } = UserAuth();\n  const [reportData, setReportData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch the expense report data when the user is logged in\n  useEffect(() => {\n    const fetchCategories = async () => {\n      if (!user) return;\n      setLoading(true); // Start loading state\n  \n      try {\n        const res = await fetch(`/api/categories/user/${user.uid}`);\n        if (!res.ok) throw new Error('Failed to fetch categories');\n        const data = await res.json();\n        setCategories(data);\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setLoading(false); // Stop loading state\n      }\n    };\n  \n    fetchCategories();\n  }, [user]); // Ensure the effect depends on the `user`\n  \nreturn (\n  <div className=\"flex\">\n    <Sidebar /> {/* Include Sidebar */}\n    <div className=\"w-3/4 p-6\">\n      <Header />\n      <h3 className=\"text-2xl font-bold\">Manage Categories</h3>\n\n      {loading ? (\n        <p>Loading...</p> // Loading state\n      ) : categories.length ? (\n        <ul>\n          {categories.map((category) => (\n            <li key={category.id}>{category.name}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>No categories available.</p>\n      )}\n\n      {/* Add new category form */}\n      <form onSubmit={handleAddCategory}>\n        <input\n          type=\"text\"\n          placeholder=\"New category name\"\n          value={newCategoryName}\n          onChange={(e) => setNewCategoryName(e.target.value)}\n          required\n        />\n        <button type=\"submit\">Add Category</button>\n      </form>\n    </div>\n  </div>\n);\n\n};\n\nexport default ExpenseReport;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}