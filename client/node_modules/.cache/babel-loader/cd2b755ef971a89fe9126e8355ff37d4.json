{"ast":null,"code":"var _jsxFileName = \"N:\\\\3rd Year (1st semester)\\\\SE 3309A\\\\Group Assignments\\\\Assignment 04\\\\3309-Assignment-4\\\\client\\\\src\\\\components\\\\ManageCategories.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { UserAuth } from '../context/AuthContext';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ManageCategories = () => {\n  _s();\n\n  const {\n    user\n  } = UserAuth();\n  const [categories, setCategories] = useState([]);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const fetchCategories = async () => {\n    if (!user) return;\n    setLoading(true);\n\n    try {\n      const res = await fetch(`/api/categories/user/${user.uid}`);\n      if (!res.ok) throw new Error('Failed to fetch categories');\n      const data = await res.json();\n      setCategories(data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n\n    setLoading(false);\n  }; // Fetch categories when the component mounts or when the user changes\n\n\n  useEffect(() => {\n    fetchCategories();\n  }, [user]);\n\n  const handleAddCategory = async e => {\n    e.preventDefault();\n    if (!user || !newCategoryName.trim()) return;\n    setLoading(true);\n    const res = await fetch('/api/categories/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.uid,\n        name: newCategoryName\n      })\n    });\n    const data = await res.json();\n    setLoading(false);\n\n    if (data.success) {\n      setNewCategoryName('');\n      fetchCategories();\n    } else {\n      alert('Error adding category.');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-3/4 p-6\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-bold\",\n          children: \"Manage Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddCategory,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New Category Name\",\n            value: newCategoryName,\n            onChange: e => setNewCategoryName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? 'Adding...' : 'Add Category'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Categories:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 22\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: cat.name\n          }, cat.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ManageCategories, \"L4ZJP+ZRzZkPRgHM5glKm+osJlQ=\");\n\n_c = ManageCategories;\nexport default ManageCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageCategories\");","map":{"version":3,"sources":["N:/3rd Year (1st semester)/SE 3309A/Group Assignments/Assignment 04/3309-Assignment-4/client/src/components/ManageCategories.jsx"],"names":["React","useState","useEffect","UserAuth","Sidebar","Header","ManageCategories","user","categories","setCategories","newCategoryName","setNewCategoryName","loading","setLoading","fetchCategories","res","fetch","uid","ok","Error","data","json","error","console","handleAddCategory","e","preventDefault","trim","method","headers","body","JSON","stringify","userId","name","success","alert","target","value","map","cat","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { UserAuth } from '../context/AuthContext';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\n\nconst ManageCategories = () => {\n  const { user } = UserAuth();\n  const [categories, setCategories] = useState([]);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const fetchCategories = async () => {\n    if (!user) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`/api/categories/user/${user.uid}`);\n      if (!res.ok) throw new Error('Failed to fetch categories');\n      const data = await res.json();\n      setCategories(data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n    setLoading(false);\n  };\n\n  // Fetch categories when the component mounts or when the user changes\n  useEffect(() => {\n    fetchCategories();\n  }, [user]);\n\n  const handleAddCategory = async (e) => {\n    e.preventDefault();\n    if (!user || !newCategoryName.trim()) return;\n\n    setLoading(true);\n    const res = await fetch('/api/categories/add', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userId: user.uid, name: newCategoryName }),\n    });\n    const data = await res.json();\n    setLoading(false);\n\n    if (data.success) {\n      setNewCategoryName('');\n      fetchCategories();\n    } else {\n      alert('Error adding category.');\n    }\n  };\n\n  return (\n    <div className=\"flex\">\n      {/* Sidebar */}\n      <Sidebar />\n\n      {/* Main Content */}\n      <div className=\"w-3/4 p-6\">\n        <Header />\n        <div className=\"mt-6\">\n          <h3 className=\"text-2xl font-bold\">Manage Categories</h3>\n          <form onSubmit={handleAddCategory}>\n            <input\n              type=\"text\"\n              placeholder=\"New Category Name\"\n              value={newCategoryName}\n              onChange={(e) => setNewCategoryName(e.target.value)}\n              required\n            />\n            <button type=\"submit\" disabled={loading}>\n              {loading ? 'Adding...' : 'Add Category'}\n            </button>\n          </form>\n\n          <h3>Your Categories:</h3>\n          {loading ? <p>Loading...</p> : null}\n          <ul>\n            {categories.map((cat) => (\n              <li key={cat.id}>\n                {cat.name}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ManageCategories;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}