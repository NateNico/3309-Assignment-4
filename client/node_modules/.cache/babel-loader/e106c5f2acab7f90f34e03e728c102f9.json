{"ast":null,"code":"var _jsxFileName = \"N:\\\\3rd Year (1st semester)\\\\SE 3309A\\\\Group Assignments\\\\Assignment 04\\\\3309-Assignment-4\\\\client\\\\src\\\\components\\\\AddExpense.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { UserAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddExpense() {\n  _s();\n\n  const {\n    user\n  } = UserAuth();\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n  const [date, setDate] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!user) {\n      alert('Please sign in first');\n      return;\n    }\n\n    setLoading(true);\n    const response = await fetch('/api/expenses/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId: user.uid,\n        amount,\n        category,\n        date,\n        description\n      })\n    });\n    const data = await response.json();\n    setLoading(false);\n\n    if (data.success) {\n      alert('Expense added successfully!');\n      setAmount('');\n      setCategory('');\n      setDate('');\n      setDescription('');\n    } else {\n      alert('Error adding expense: ' + data.error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Category\",\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Submitting...' : 'Add Expense'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddExpense, \"2PPmxzpQRYG8kBfsGf3GMKNyhMA=\");\n\n_c = AddExpense;\nexport default AddExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExpense\");","map":{"version":3,"sources":["N:/3rd Year (1st semester)/SE 3309A/Group Assignments/Assignment 04/3309-Assignment-4/client/src/components/AddExpense.jsx"],"names":["React","useState","UserAuth","AddExpense","user","amount","setAmount","category","setCategory","date","setDate","description","setDescription","loading","setLoading","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","userId","uid","data","json","success","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { UserAuth } from '../context/AuthContext';\n\nfunction AddExpense() {\n  const { user } = UserAuth();\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n  const [date, setDate] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!user) {\n      alert('Please sign in first');\n      return;\n    }\n\n    setLoading(true);\n    const response = await fetch('/api/expenses/add', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        userId: user.uid,\n        amount,\n        category,\n        date,\n        description,\n      }),\n    });\n    const data = await response.json();\n    setLoading(false);\n\n    if (data.success) {\n      alert('Expense added successfully!');\n      setAmount('');\n      setCategory('');\n      setDate('');\n      setDescription('');\n    } else {\n      alert('Error adding expense: ' + data.error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"number\"\n        placeholder=\"Amount\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n        required\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Category\"\n        value={category}\n        onChange={(e) => setCategory(e.target.value)}\n        required\n      />\n      <input\n        type=\"date\"\n        value={date}\n        onChange={(e) => setDate(e.target.value)}\n        required\n      />\n      <textarea\n        placeholder=\"Description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <button type=\"submit\" disabled={loading}>\n        {loading ? 'Submitting...' : 'Add Expense'}\n      </button>\n    </form>\n  );\n}\n\nexport default AddExpense;\n"]},"metadata":{},"sourceType":"module"}