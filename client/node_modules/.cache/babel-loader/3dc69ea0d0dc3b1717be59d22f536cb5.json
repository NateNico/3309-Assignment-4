{"ast":null,"code":"import React,{useState,useEffect}from'react';import{UserAuth}from'../context/AuthContext';import Sidebar from'./Sidebar';import Header from'./Header';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ManageCategories=()=>{const{user}=UserAuth();const[categories,setCategories]=useState([]);const[newCategoryName,setNewCategoryName]=useState('');const[loading,setLoading]=useState(false);// Updated fetchCategories function with error handling\nconst fetchCategories=async()=>{if(!user)return;setLoading(true);try{const res=await fetch(\"/api/categories/user/\".concat(user.uid));if(!res.ok){throw new Error('Failed to fetch categories');}const data=await res.json();setCategories(data);}catch(error){console.error('Error fetching categories:',error);}setLoading(false);};// Fetch categories when the component mounts or when the user changes\nuseEffect(()=>{fetchCategories();},[user]);const handleAddCategory=async e=>{e.preventDefault();if(!user||!newCategoryName.trim())return;setLoading(true);const res=await fetch('/api/categories/add',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({userId:user.uid,name:newCategoryName})});const data=await res.json();setLoading(false);if(data.success){setNewCategoryName('');fetchCategories();}else{alert('Error adding category.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-3/4 p-6\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl font-bold\",children:\"Manage Categories\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddCategory,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"New Category Name\",value:newCategoryName,onChange:e=>setNewCategoryName(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Adding...':'Add Category'})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Your Categories:\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):null,/*#__PURE__*/_jsx(\"ul\",{children:categories.map(cat=>/*#__PURE__*/_jsx(\"li\",{children:cat.name},cat.id))})]})]})]});};export default ManageCategories;","map":{"version":3,"sources":["N:/3rd Year (1st semester)/SE 3309A/Group Assignments/Assignment 04/3309-Assignment-4/client/src/components/ManageCategories.jsx"],"names":["React","useState","useEffect","UserAuth","Sidebar","Header","ManageCategories","user","categories","setCategories","newCategoryName","setNewCategoryName","loading","setLoading","fetchCategories","res","fetch","uid","ok","Error","data","json","error","console","handleAddCategory","e","preventDefault","trim","method","headers","body","JSON","stringify","userId","name","success","alert","target","value","map","cat","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { UserAuth } from '../context/AuthContext';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\n\nconst ManageCategories = () => {\n  const { user } = UserAuth();\n  const [categories, setCategories] = useState([]);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Updated fetchCategories function with error handling\n  const fetchCategories = async () => {\n    if (!user) return;\n    setLoading(true);\n    try {\n      const res = await fetch(`/api/categories/user/${user.uid}`);\n      if (!res.ok) {\n        throw new Error('Failed to fetch categories');\n      }\n      const data = await res.json();\n      setCategories(data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n    setLoading(false);\n  };\n\n  // Fetch categories when the component mounts or when the user changes\n  useEffect(() => {\n    fetchCategories();\n  }, [user]);\n\n  const handleAddCategory = async (e) => {\n    e.preventDefault();\n    if (!user || !newCategoryName.trim()) return;\n\n    setLoading(true);\n    const res = await fetch('/api/categories/add', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userId: user.uid, name: newCategoryName }),\n    });\n    const data = await res.json();\n    setLoading(false);\n\n    if (data.success) {\n      setNewCategoryName('');\n      fetchCategories();\n    } else {\n      alert('Error adding category.');\n    }\n  };\n\n  return (\n    <div className=\"flex\">\n      {/* Sidebar */}\n      <Sidebar />\n\n      {/* Main Content */}\n      <div className=\"w-3/4 p-6\">\n        <Header />\n        <div className=\"mt-6\">\n          <h3 className=\"text-2xl font-bold\">Manage Categories</h3>\n          <form onSubmit={handleAddCategory}>\n            <input\n              type=\"text\"\n              placeholder=\"New Category Name\"\n              value={newCategoryName}\n              onChange={(e) => setNewCategoryName(e.target.value)}\n              required\n            />\n            <button type=\"submit\" disabled={loading}>\n              {loading ? 'Adding...' : 'Add Category'}\n            </button>\n          </form>\n\n          <h3>Your Categories:</h3>\n          {loading ? <p>Loading...</p> : null}\n          <ul>\n            {categories.map((cat) => (\n              <li key={cat.id}>\n                {cat.name}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ManageCategories;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}