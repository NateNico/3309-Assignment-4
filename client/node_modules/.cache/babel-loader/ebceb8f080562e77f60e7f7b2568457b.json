{"ast":null,"code":"import{createContext,useContext,useEffect,useState}from'react';import{createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut,onAuthStateChanged}from'firebase/auth';import{auth}from'../firebase';import{jsx as _jsx}from\"react/jsx-runtime\";const UserContext=/*#__PURE__*/createContext();export const AuthContextProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState({});const createUser=async(email,password)=>{try{return await createUserWithEmailAndPassword(auth,email,password);}catch(error){console.error('Error creating user:',error.message);throw error;// Re-throw the error so the calling component can handle it.\n}};const signIn=async(email,password)=>{try{return await signInWithEmailAndPassword(auth,email,password);}catch(error){console.error('Error signing in:',error.message);throw error;// Re-throw the error so the calling component can handle it.\n}};const logout=async()=>{try{await signOut(auth);}catch(error){console.error('Error signing out:',error.message);// You can choose to re-throw or handle this error as well.\n}};useEffect(()=>{const unsubscribe=onAuthStateChanged(auth,currentUser=>{console.log('Auth state changed, current user:',currentUser);setUser(currentUser);});return()=>{unsubscribe();};},[]);return/*#__PURE__*/_jsx(UserContext.Provider,{value:{createUser,user,logout,signIn},children:children});};export const UserAuth=()=>{return useContext(UserContext);};","map":{"version":3,"sources":["N:/3rd Year (1st semester)/SE 3309A/Group Assignments/Assignment 04/3309-Assignment-4/client/src/context/AuthContext.js"],"names":["createContext","useContext","useEffect","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","auth","UserContext","AuthContextProvider","children","user","setUser","createUser","email","password","error","console","message","signIn","logout","unsubscribe","currentUser","log","UserAuth"],"mappings":"AAAA,OAASA,aAAT,CAAwBC,UAAxB,CAAoCC,SAApC,CAA+CC,QAA/C,KAA+D,OAA/D,CACA,OACEC,8BADF,CAEEC,0BAFF,CAGEC,OAHF,CAIEC,kBAJF,KAKO,eALP,CAMA,OAASC,IAAT,KAAqB,aAArB,C,2CAEA,KAAMC,CAAAA,WAAW,cAAGT,aAAa,EAAjC,CAEA,MAAO,MAAMU,CAAAA,mBAAmB,CAAG,MAAkB,IAAjB,CAAEC,QAAF,CAAiB,MACnD,KAAM,CAACC,IAAD,CAAOC,OAAP,EAAkBV,QAAQ,CAAC,EAAD,CAAhC,CAEA,KAAMW,CAAAA,UAAU,CAAG,MAAOC,KAAP,CAAcC,QAAd,GAA2B,CAC5C,GAAI,CACF,MAAO,MAAMZ,CAAAA,8BAA8B,CAACI,IAAD,CAAOO,KAAP,CAAcC,QAAd,CAA3C,CACD,CAAC,MAAOC,KAAP,CAAc,CACdC,OAAO,CAACD,KAAR,CAAc,sBAAd,CAAsCA,KAAK,CAACE,OAA5C,EACA,KAAMF,CAAAA,KAAN,CAAa;AACd,CACF,CAPD,CASA,KAAMG,CAAAA,MAAM,CAAG,MAAOL,KAAP,CAAcC,QAAd,GAA2B,CACxC,GAAI,CACF,MAAO,MAAMX,CAAAA,0BAA0B,CAACG,IAAD,CAAOO,KAAP,CAAcC,QAAd,CAAvC,CACD,CAAC,MAAOC,KAAP,CAAc,CACdC,OAAO,CAACD,KAAR,CAAc,mBAAd,CAAmCA,KAAK,CAACE,OAAzC,EACA,KAAMF,CAAAA,KAAN,CAAa;AACd,CACF,CAPD,CASA,KAAMI,CAAAA,MAAM,CAAG,SAAY,CACzB,GAAI,CACF,KAAMf,CAAAA,OAAO,CAACE,IAAD,CAAb,CACD,CAAC,MAAOS,KAAP,CAAc,CACdC,OAAO,CAACD,KAAR,CAAc,oBAAd,CAAoCA,KAAK,CAACE,OAA1C,EACA;AACD,CACF,CAPD,CASAjB,SAAS,CAAC,IAAM,CACd,KAAMoB,CAAAA,WAAW,CAAGf,kBAAkB,CAACC,IAAD,CAAQe,WAAD,EAAiB,CAC5DL,OAAO,CAACM,GAAR,CAAY,mCAAZ,CAAiDD,WAAjD,EACAV,OAAO,CAACU,WAAD,CAAP,CACD,CAHqC,CAAtC,CAIA,MAAO,IAAM,CACXD,WAAW,GACZ,CAFD,CAGD,CARQ,CAQN,EARM,CAAT,CAUA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAER,UAAF,CAAcF,IAAd,CAAoBS,MAApB,CAA4BD,MAA5B,CAA7B,UACGT,QADH,EADF,CAKD,CA7CM,CA+CP,MAAO,MAAMc,CAAAA,QAAQ,CAAG,IAAM,CAC5B,MAAOxB,CAAAA,UAAU,CAACQ,WAAD,CAAjB,CACD,CAFM","sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n} from 'firebase/auth';\nimport { auth } from '../firebase';\n\nconst UserContext = createContext();\n\nexport const AuthContextProvider = ({ children }) => {\n  const [user, setUser] = useState({});\n\n  const createUser = async (email, password) => {\n    try {\n      return await createUserWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      console.error('Error creating user:', error.message);\n      throw error; // Re-throw the error so the calling component can handle it.\n    }\n  };\n\n  const signIn = async (email, password) => {\n    try {\n      return await signInWithEmailAndPassword(auth, email, password);\n    } catch (error) {\n      console.error('Error signing in:', error.message);\n      throw error; // Re-throw the error so the calling component can handle it.\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error('Error signing out:', error.message);\n      // You can choose to re-throw or handle this error as well.\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      console.log('Auth state changed, current user:', currentUser);\n      setUser(currentUser);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ createUser, user, logout, signIn }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const UserAuth = () => {\n  return useContext(UserContext);\n};\n"]},"metadata":{},"sourceType":"module"}